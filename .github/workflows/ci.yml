name: build

on:
  pull_request:
  push:
    branches:
      - ci

env:
  ROS_DISTRO: foxy
  ROS_VERSION: ros2
  DEBIAN_FRONTEND: noninteractive

defaults:
  run:
    shell: bash
      
jobs:
  build:
    runs-on: ubuntu-20.04
  
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Update Environment Vars
      run: |
        echo "ROS_WORKSPACE=$GITHUB_WORKSPACE/$ROS_VERSION/$ROS_DISTRO" >> $GITHUB_ENV

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install vcstool black flake8

    - name: Setup workspace
      run: |
        mkdir -p $ROS_WORKSPACE/src
        ln -s $GITHUB_WORKSPACE $ROS_WORKSPACE/src
        
    - name: Cloning ROS Deps
      run: |
        echo "Repository Name ${{ github.event.repository.name }}"
        cd ${ROS_WORKSPACE}/src/${{ github.event.repository.name }}
        vcs import . < deps.repos
        cd ${ROS_WORKSPACE}
        
    - name: Setup ROS
      uses: ros-tooling/setup-ros@v0.1
      with:
        required-ros-distributions: ${{ env.ROS_DISTRO }}

    # - name: Building
    #   uses: ros-tooling/action-ros-ci@v0.1
    #   with:
    #     target-ros2-distro: ${{ env.ROS_DISTRO }}
    #     package-name: backhoe_ros_pkg
      
    # - name: Installing ROS
    #   run: |
    #     sudo apt-get install -y ros-${{ env.ROS_DISTRO }}-desktop python3-colcon-* \
    #     octomap-tools libflann-dev libpcl-dev libboost-all-dev libeigen-stl-containers-dev \
    #     libqhull-dev libccd-dev ros-${{ env.ROS_DISTRO }}-ament-cmake-ros
      
    # - name: Build workspace
    #   run: |
    #     sudo apt update && sudo apt-get  install locales -y
    #     sudo locale-gen en_US en_US.UTF-8
    #     sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
    #     export LANG=en_US.UTF-8
        
    #     cd ${{ env.ROS_WORKSPACE }}/
    #     echo "WORKSPACE: ${{ env.ROS_WORKSPACE }}"

    #     source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
    #     echo `pwd`
    #     ls
      
    #     colcon build --symlink-install --event-handlers console_direct+
