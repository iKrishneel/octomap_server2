name: build

on:
  pull_request:
  push:
    branches:
      - ci

env:
  ROS_DISTRO: foxy
  ROS_VERSION: ros2
  DEBIAN_FRONTEND: noninteractive

defaults:
  run:
    shell: bash
      
jobs:
  build:
    runs-on: ubuntu-20.04
  
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Using Docker
      run: |
        export DOCKER_IMAGE=osrf/ros2:nightly
        export CI_SOURCE_PATH=$(pwd)
        export REPO_NAME=${{ github.event.repository.name }}

        docker run -v $HOME:$HOME -e CI_SOURCE_PATH -e $REPO_NAME -e HOME $DOCKER_IMAGE bash -c 'cd $CI_SOURCE_PATH; source .github/travis.sh'
    
    # - name: Set up Python
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: '3.8'

    # - name: Update Environment Vars
    #   run: |
    #     echo "ROS_WORKSPACE=$GITHUB_WORKSPACE/$ROS_VERSION/$ROS_DISTRO" >> $GITHUB_ENV

    # - name: Install build dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install vcstool black flake8

    # - name: Setup workspace
    #   run: |
    #     vcs import . < deps.repos
        
    # - name: Setup ROS
    #   uses: ros-tooling/setup-ros@v0.1
    #   with:
    #     required-ros-distributions: ${{ env.ROS_DISTRO }}

    # - name: Build workspace
    #   run: |
    #     sudo apt update
    #     sudo apt-get install -y locales libflann-dev liboctomap-dev libpcl-dev

    #     sudo locale-gen en_US en_US.UTF-8
    #     sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
    #     export LANG=en_US.UTF-8
      
    #     cd ../../..

    #     ls /opt/ros/${{ env.ROS_DISTRO }}/

    #     source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
    #     echo `pwd`
    #     ls
      
    #     colcon build --symlink-install --event-handlers console_direct+
